{
  "info": {
    "name": "SkillSwap Connection API",
    "description": "Complete API collection for user connection features",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "connection_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "skill_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "ðŸ”— Connection Management",
      "description": "All connection-related endpoints",
      "item": [
        {
          "name": "Send Connection Request",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"recipientId\": \"{{user_id}}\",\n  \"message\": \"Hi! I'd like to connect with you to share skills.\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/connections/send",
              "host": ["{{base_url}}"],
              "path": ["connections", "send"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('connection_id', response.connection._id);",
                  "    console.log('Connection ID saved:', response.connection._id);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Pending Connection Requests",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/pending",
              "host": ["{{base_url}}"],
              "path": ["connections", "pending"]
            }
          }
        },
        {
          "name": "Accept Connection Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/{{connection_id}}/accept",
              "host": ["{{base_url}}"],
              "path": ["connections", "{{connection_id}}", "accept"]
            }
          }
        },
        {
          "name": "Reject Connection Request",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/{{connection_id}}/reject",
              "host": ["{{base_url}}"],
              "path": ["connections", "{{connection_id}}", "reject"]
            }
          }
        },
        {
          "name": "Get Accepted Connections",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/accepted",
              "host": ["{{base_url}}"],
              "path": ["connections", "accepted"]
            }
          }
        },
        {
          "name": "Get All Connection Requests",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/all",
              "host": ["{{base_url}}"],
              "path": ["connections", "all"]
            }
          }
        },
        {
          "name": "Get All Connection Requests (Filtered by Status)",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/all?status=pending",
              "host": ["{{base_url}}"],
              "path": ["connections", "all"],
              "query": [
                {
                  "key": "status",
                  "value": "pending",
                  "description": "Filter by status: pending, accepted, rejected"
                }
              ]
            }
          }
        },
        {
          "name": "Cancel Connection Request",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/{{connection_id}}/cancel",
              "host": ["{{base_url}}"],
              "path": ["connections", "{{connection_id}}", "cancel"]
            }
          }
        },
        {
          "name": "Remove Accepted Connection",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/{{connection_id}}/remove",
              "host": ["{{base_url}}"],
              "path": ["connections", "{{connection_id}}", "remove"]
            }
          }
        },
        {
          "name": "Get Connection Status with User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/status/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["connections", "status", "{{user_id}}"]
            }
          }
        },
        {
          "name": "Search Users by Skill to Teach",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/search/by-skill?skillId={{skill_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "search", "by-skill"],
              "query": [
                {
                  "key": "skillId",
                  "value": "{{skill_id}}"
                }
              ]
            }
          },
          "description": "Find users who can teach a given skill (by skillId)."
        }
      ]
    },
    {
      "name": "ðŸ“‹ Connection Status Examples",
      "description": "Example responses for different connection statuses",
      "item": [
        {
          "name": "No Connection",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwt_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/connections/status/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["connections", "status", "{{user_id}}"]
            }
          },
          "response": [
            {
              "name": "No Connection Example",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/connections/status/{{user_id}}"
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"none\",\n  \"relationship\": \"none\",\n  \"message\": \"No connection exists\"\n}"
            }
          ]
        },
        {
          "name": "Request Sent",
          "response": [
            {
              "name": "Request Sent Example",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/connections/status/{{user_id}}"
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"pending\",\n  \"relationship\": \"request_sent\",\n  \"connection\": {\n    \"_id\": \"connection_id\",\n    \"requester\": \"user1_id\",\n    \"recipient\": \"user2_id\",\n    \"status\": \"pending\",\n    \"message\": \"Hi! I'd like to connect.\",\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Request Received",
          "response": [
            {
              "name": "Request Received Example",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/connections/status/{{user_id}}"
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"pending\",\n  \"relationship\": \"request_received\",\n  \"connection\": {\n    \"_id\": \"connection_id\",\n    \"requester\": \"user1_id\",\n    \"recipient\": \"user2_id\",\n    \"status\": \"pending\",\n    \"message\": \"Hi! I'd like to connect.\",\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\"\n  }\n}"
            }
          ]
        },
        {
          "name": "Connected",
          "response": [
            {
              "name": "Connected Example",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/connections/status/{{user_id}}"
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"status\": \"accepted\",\n  \"relationship\": \"connected\",\n  \"connection\": {\n    \"_id\": \"connection_id\",\n    \"requester\": \"user1_id\",\n    \"recipient\": \"user2_id\",\n    \"status\": \"accepted\",\n    \"message\": \"Hi! I'd like to connect.\",\n    \"createdAt\": \"2024-01-01T00:00:00.000Z\",\n    \"updatedAt\": \"2024-01-01T01:00:00.000Z\"\n  }\n}"
            }
          ]
        }
      ]
    },
    {
      "name": "ðŸ’¬ Chat",
      "description": "Chat endpoints for user-to-user messaging.\n\nFor real-time chat, connect to ws://localhost:3000 using Socket.IO.\n\nSocket.IO Events:\n- identify: Send your userId after connecting.\n- chat message: Send { senderId, recipientId, content } to send a message.\n- chat message: Listen for incoming messages.\n\nExample (Socket.IO client):\n\n// Connect\nconst socket = io('ws://localhost:3000');\n// Identify\nsocket.emit('identify', userId);\n// Send message\nsocket.emit('chat message', { senderId, recipientId, content });\n// Listen for messages\nsocket.on('chat message', (msg) => { console.log(msg); });\n",
      "item": [
        {
          "name": "Send Message",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{jwt_token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"recipientId\": \"{{user_id}}\",\n  \"content\": \"Hello!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/chat/send",
              "host": ["{{base_url}}"],
              "path": ["chat", "send"]
            }
          }
        },
        {
          "name": "Get Messages",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{jwt_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/chat/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["chat", "{{user_id}}"]
            }
          }
        }
      ]
    }
  ]
} 